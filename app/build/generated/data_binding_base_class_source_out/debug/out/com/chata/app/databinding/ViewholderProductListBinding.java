// Generated by data binding compiler. Do not edit!
package com.chata.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.chata.app.R;
import com.chata.app.data.entity.Product;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ViewholderProductListBinding extends ViewDataBinding {
  @NonNull
  public final MaterialCardView card;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final MaterialButton materialButton;

  @NonNull
  public final MaterialButton materialButton2;

  @NonNull
  public final TextView textView;

  @Bindable
  protected Product mProduct;

  protected ViewholderProductListBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialCardView card, ImageView imageView, ConstraintLayout linearLayout,
      MaterialButton materialButton, MaterialButton materialButton2, TextView textView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.card = card;
    this.imageView = imageView;
    this.linearLayout = linearLayout;
    this.materialButton = materialButton;
    this.materialButton2 = materialButton2;
    this.textView = textView;
  }

  public abstract void setProduct(@Nullable Product product);

  @Nullable
  public Product getProduct() {
    return mProduct;
  }

  @NonNull
  public static ViewholderProductListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.viewholder_product_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ViewholderProductListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ViewholderProductListBinding>inflateInternal(inflater, R.layout.viewholder_product_list, root, attachToRoot, component);
  }

  @NonNull
  public static ViewholderProductListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.viewholder_product_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ViewholderProductListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ViewholderProductListBinding>inflateInternal(inflater, R.layout.viewholder_product_list, null, false, component);
  }

  public static ViewholderProductListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ViewholderProductListBinding bind(@NonNull View view, @Nullable Object component) {
    return (ViewholderProductListBinding)bind(component, view, R.layout.viewholder_product_list);
  }
}
